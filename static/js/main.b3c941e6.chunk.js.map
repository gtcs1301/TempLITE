{"version":3,"sources":["components/Ace.js","components/Preview.js","App.js","index.js"],"names":["Ace","state","setUp","editor","props","on","e","updatePreview","getValue","this","refs","aceEditor","name","ref","mode","theme","editorProps","$blockScrolling","showPrintMargin","wrapEnabled","fontSize","width","height","PureComponent","highlight","str","lang","hljs","getLanguage","value","err","console","error","highlightAuto","Wrapper","styled","div","Preview","className","id","source","preview","options","html","linkify","breaks","App","message","setState","printPage","window","print","role","aria-label","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"qNA6CeA,G,wNAvCbC,MAAQ,G,EAERC,MAAQ,SAACC,GAEP,IAAMC,EAAQ,EAAKA,MAGnBD,EAAOE,GAAG,UAAU,SAAUC,GAE5BF,EAAMG,cAAcJ,EAAOK,gB,kEAM7B,IAAML,EAASM,KAAKC,KAAKC,UAAUR,OAGnCM,KAAKP,MAAMC,K,+BAIX,OACE,kBAAC,IAAD,CACES,KAAK,SACLC,IAAI,YACJC,KAAK,WACLC,MAAM,UACNC,YAAa,CAAEC,iBAAiB,GAChCC,iBAAiB,EACjBC,aAAa,EACbC,SAAU,GACVC,MAAM,MACNC,OAAO,a,GAlCGC,kB,oRCElB,IAAMC,EAAY,SAACC,EAAKC,GACtB,GAAIA,GAAQC,IAAKC,YAAYF,GAC3B,IACE,OAAOC,IAAKH,UAAUE,EAAMD,GAAKI,MACjC,MAAOC,GACPC,QAAQC,MAAMF,GAIlB,IACE,OAAOH,IAAKM,cAAcR,GAAKI,MAC/B,MAAOC,GACPC,QAAQC,MAAMF,GAGhB,MAAO,IAGHI,EAAUC,IAAOC,IAAV,KA4BEC,EAlBC,SAACjC,GACf,OACE,kBAAC8B,EAAD,CAASI,UAAU,0BACjB,yBAAKC,GAAG,mBACN,kBAAC,IAAD,CACEC,OAAQpC,EAAMqC,QACdC,QAAS,CACPlB,YACAmB,MAAM,EACNC,SAAS,EACTC,QAAQ,QCSLC,G,yDA9Cb,aAAe,IAAD,8BAEZ,gBAJF7C,MAAQ,GAEM,EAWdM,cAAgB,SAACwC,GACf,EAAKC,SAAS,CAAEP,QAASM,KAZb,EAgBdE,UAAY,WACVC,OAAOC,SAZP,EAAKlD,MAAQ,CACXwC,QAAS,IANC,E,qDAqBZ,OACE,yBAAKF,GAAG,SACN,yBAAKA,GAAG,WAAR,sBAEE,0BAAMa,KAAK,MAAMC,aAAW,QAA5B,gBAGA,yBAAKf,UAAU,aACb,yBAAKA,UAAU,4BAA4BgB,QAAS7C,KAAKwC,WACvD,0BAAMG,KAAK,MAAMC,aAAW,WAA5B,gBADF,cAQJ,yBAAKd,GAAG,WACN,kBAAC,EAAD,CAAKhC,cAAeE,KAAKF,gBACzB,kBAAC,EAAD,CAASkC,QAAShC,KAAKR,MAAMwC,gB,GA1CrBc,cCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b3c941e6.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\nimport \"ace-builds/src-noconflict/mode-markdown\";\n\nclass Ace extends PureComponent {\n  state = {};\n\n  setUp = (editor) => {\n    // save reference to props\n    const props = this.props;\n\n    // listen for changes in the editor\n    editor.on(\"change\", function (e) {\n      // update the preview upon any changes\n      props.updatePreview(editor.getValue());\n    });\n  };\n\n  componentDidMount() {\n    // define the editor\n    const editor = this.refs.aceEditor.editor;\n\n    // finish setting up and establish event listeners\n    this.setUp(editor);\n  }\n\n  render() {\n    return (\n      <AceEditor\n        name=\"editor\"\n        ref=\"aceEditor\"\n        mode=\"markdown\"\n        theme=\"dracula\"\n        editorProps={{ $blockScrolling: true }}\n        showPrintMargin={false}\n        wrapEnabled={true}\n        fontSize={16}\n        width=\"50%\"\n        height=\"100%\"\n      />\n    );\n  }\n}\n\nexport default Ace;\n","import React from \"react\";\nimport Markdown from \"react-markdown-it\";\nimport styled from \"styled-components\";\nimport hljs from \"highlight.js\";\nimport \"highlight.js/styles/github-gist.css\";\nimport \"github-markdown-css\";\n\nconst highlight = (str, lang) => {\n  if (lang && hljs.getLanguage(lang)) {\n    try {\n      return hljs.highlight(lang, str).value;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  try {\n    return hljs.highlightAuto(str).value;\n  } catch (err) {\n    console.error(err);\n  }\n\n  return \"\";\n};\n\nconst Wrapper = styled.div`\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  width: 50%;\n  @media print {\n    padding: 0;\n    overflow-y: visible;\n  }\n`;\n\nconst Preview = (props) => {\n  return (\n    <Wrapper className=\"preview  markdown-body\">\n      <div id=\"preview-padding\">\n        <Markdown\n          source={props.preview}\n          options={{\n            highlight,\n            html: true,\n            linkify: true,\n            breaks: true,\n          }}\n        ></Markdown>\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default Preview;\n","import React, { Component } from \"react\";\nimport Ace from \"./components/Ace\";\nimport Preview from \"./components/Preview\";\nimport \"./css/App.scss\";\n\nclass App extends Component {\n  state = {};\n\n  constructor() {\n    // call super constructor\n    super();\n\n    // set up state of the client\n    this.state = {\n      preview: \"\",\n    };\n  }\n\n  // get preview from editor child and pass to preview child\n  updatePreview = (message) => {\n    this.setState({ preview: message });\n  };\n\n  // invoke the print functionality\n  printPage = () => {\n    window.print();\n  };\n\n  render() {\n    return (\n      <div id=\"ultra\">\n        <div id=\"nav-bar\">\n          CS1301 TempLITE&nbsp;\n          <span role=\"img\" aria-label=\"Fire\">\n            ðŸ”¥\n          </span>\n          <div className=\"nav-right\">\n            <div className=\"print-btn btn btn-primary\" onClick={this.printPage}>\n              <span role=\"img\" aria-label=\"Printer\">\n                ðŸ–¨\n              </span>\n              &nbsp;Save\n            </div>\n          </div>\n        </div>\n        <div id=\"content\">\n          <Ace updatePreview={this.updatePreview} />\n          <Preview preview={this.state.preview} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}